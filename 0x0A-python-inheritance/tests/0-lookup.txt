def test_lookup_function():
    """
    Test the lookup function.

    Test cases:
    1. Test with a simple class object.
    2. Test with a custom object containing attributes and methods.
    3. Test with an empty object.

    Each test case asserts that the result of the lookup function matches
    the expected outcome.
    """

    # Test case 1: Simple class object
    class SimpleObject:
        pass

    result_simple = lookup(SimpleObject)
    assert result_simple == [], f"Test case 1 failed: {result_simple}"

    # Test case 2: Custom object with attributes and methods
    class CustomObject:
        def __init__(self):
            self.name = "Custom"
            self.value = 42

        def get_value(self):
            return self.value

    custom_instance = CustomObject()
    result_custom = lookup(custom_instance)
    expected_custom = ['name', 'value', 'get_value']
    assert result_custom == expected_custom,
    f"Test case 2 failed: {result_custom}"

    # Test case 3: Empty object
    empty_instance = object()
    result_empty = lookup(empty_instance)
    assert result_empty == [], f"Test case 3 failed: {result_empty}"

    print("All test cases passed!")

    test_lookup_function()
